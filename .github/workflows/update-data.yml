name: Update Data
on:
  workflow_dispatch:

jobs:
  update-data:
    name: Update Data
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date "+%Y%m%dT%H%M%S")" >> $GITHUB_OUTPUT
        shell: bash
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: main
      - name: Formatter Setup
        uses: actions/checkout@v4
        with:
          repository: windy-civi/windy-civi
          ref: jml/additional-proj-setup # TODO prototyping branch
          path: windy-civi
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pipenv'
      - name: Cache Scrapes
        uses: actions/cache@v4
        with:
          path: /var/tmp/_working/_cache
          key: cache-scrapes-key-${{ steps.get-date.outputs.date }}
          restore-keys: |
            cache-scrapes-key-
      - name: Scrape Data
        working-directory: ./main
        run: |
          docker pull openstates/scrapers:28675b011eef5bb35a758d05d1b7313d515c28ea
          mkdir -p /var/tmp/_working
          docker run \
              -v "/var/tmp/_working/_data":/opt/openstates/openstates/_data \
              -v "/var/tmp/_working/_cache":/opt/openstates/openstates/_cache \
              openstates/scrapers:28675b011eef5bb35a758d05d1b7313d515c28ea \
              il bills --scrape --fastmode
      # The scraper adds _id and scraped_at to the data, which are non deterministic and mess with the immutable nature of our goals.
      - name: Sanitize Data (removes _id and scraped_at)
        working-directory: ./main
        env:
          FORMATTER_INPUT_FOLDER: /var/tmp/_working/_data/il
        run: |
          find $FORMATTER_INPUT_FOLDER -type f -name "*.json" -exec sh -c 'jq "del(..|._id?, .scraped_at?)" "{}" > "{}.tmp" && mv "{}.tmp" "{}"' \;
      - name: Format Data
        working-directory: ./windy-civi/openstates_scraped_data_formatter
        env:
          FORMATTER_INPUT_FOLDER: /var/tmp/_working/_data/il
        run: |
          ls -al
          echo $FORMATTER_INPUT_FOLDER
          pip install pipenv
          pipenv install
          pipenv run python main.py
          cd data/data_output/il/data_processed
          tar zcvf /var/tmp/snapshot-${{ steps.get-date.outputs.date }}.tgz country:us
      - name: Create Release
        working-directory: ./main
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config user.email "no_email"
          git config user.name "Windy Civi Bot"
          git tag snapshot-${{ steps.get-date.outputs.date }}
          git push origin snapshot-${{ steps.get-date.outputs.date }}
          gh release create snapshot-${{ steps.get-date.outputs.date }} \
            /var/tmp/snapshot-${{ steps.get-date.outputs.date }}.tgz \
            --title "Snapshot ${{ steps.get-date.outputs.date }}" \
            --notes "Snapshot of data as of ${{ steps.get-date.outputs.date }}"
